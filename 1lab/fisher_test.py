import numpy as np

def adequacy_dispersion(Y, Y_pred, m, N, n):
    """
    Вычисляет дисперсию адекватности модели (остаточную дисперсию).

    Parameters:
    Y (numpy array): Фактические значения зависимой переменной.
    Y_pred (numpy array): Предсказанные значения зависимой переменной.
    m (int): Количество повторных измерений.
    N (int): Количество экспериментов.
    n (int): Количество коэффициентов модели (параметров регрессии).

    Returns:
    S_ad (float): Дисперсия адекватности модели, либо 'inf' в случае ошибки.
    """
    if N - n > 0:  # Проверяем, чтобы знаменатель был положительным
        # Вычисление остаточной дисперсии с учетом m повторений
        return np.sum((Y - Y_pred) ** 2) / ((N - n) * m)
    else:
        return float('inf')  # Возвращаем 'inf'


def fisher_test(S_ad, S0):
    """
    Вычисляет критерий Фишера для проверки адекватности модели.

    Parameters:
    S_ad (float): Дисперсия адекватности.
    S0 (float): Общая дисперсия (ошибка модели).

    Returns:
    Fp (float): Рассчитанное значение критерия Фишера.
    """
    if S0 > 0:  # Проверка, чтобы не делить на 0
        return S_ad / S0
    else:
        print("Ошибка: нулевая или отрицательная общая дисперсия.")
        return float('inf')
